matrix:
  include:
    - language: java
      before_script:
        - cd ecoviz-service

      addons:
        sonarcloud:
          organization: "sonarcloud_organization_key" # the key of the org you chose at step #3
          token:
            secure: ********* # encrypted value of your token

      script:
        - echo "Building ecoviz-service"

        #- sed -i.bak -E "s/(mongodb-server-host-1:)(.*)$/\1 $MONGO_HOST/g" src/main/resources/META-INF/jnosql.yaml
        #- sonar:sonar  -Dsonar.projectKey=jonathanfievet_ecoviz -Dsonar.organization=jonathanfievet-github  -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=df11dc103e89d8c95dbefd70400a01de7baa80cf
        #- mvn -B clean install
        - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar


      after_success:
        - # Triggers redeployment
        - echo "Triggering webhook"
        - "curl -X POST \"$HOOK_URL\" -H \"X-Hook-Token:$HOOK_TOKEN\" -H \"Content-Type:application/json\" -d '{\"name\":\"ecoviz-service\"}\"'"

      branches:
        only:
          - master

    - language: javascript
      before_script:
        - nvm install 11
        - npm install -g yarn
        - cd ecoviz-front
      script:
        - echo "Building ecoviz-front"

        - yarn install
        - yarn run build:prod

      after_success:
        - # Trigger redeployment
        - echo "Triggering ecoviz-front"
        - zip -r dist.zip dist
        - FILE_URL=$(curl --upload-file dist.zip https://transfer.sh/dist.zip)
        - "curl -X POST \"$HOOK_URL\" -H \"X-Hook-Token:$HOOK_TOKEN\" -H \"Content-Type:application/json\" -d '{\"name\":\"ecoviz-front\",\"url\":\"'$FILE_URL'\"}\"'"

      branches:
        only:
          - master

      cache:
        yarn: true
        directories:
          - node_modules

notifications:
  email:
    - $EMAIL
